# Configuración del servidor
quarkus.http.port=9090
quarkus.http.root-path=/CRUD

# Nombre de la aplicacións
quarkus.application.name=CrudUniquindio2025_Quarkus

# Conexión a la base de datos MySQL
quarkus.datasource.db-kind=mysql
quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/principal_database?allowPublicKeyRetrieval=true&useSSL=false
quarkus.datasource.username=root
quarkus.datasource.password=12345

# Configuración de JPA/Hibernate
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.dialect=org.hibernate.dialect.MySQLDialect

# Configuración de OpenAPI/Swagger
quarkus.smallrye-openapi.path=/openapi
quarkus.swagger-ui.path=/swagger-ui.html
quarkus.swagger-ui.always-include=true

# Configuración de OpenAPI para Quarkus

# Ruta donde se expondrá el documento OpenAPI

# Información básica de la API
mp.openapi.info.title=API de CRUD - Uniquindio
mp.openapi.info.version=1.0
mp.openapi.info.description=Esta API permite gestionar usuarios y trabajos.

# Información de contacto
mp.openapi.info.contact.name=Diego Alejandro Pastrana Fernandez, Santiago Fernandez, Andres Felipe Rendon y Juan Camilo Valbuena
mp.openapi.info.contact.email=diegoa.pastranaf@uqvirtual.edu.co,andresf.rendonn@uqvirtual.edu.co
mp.openapi.info.contact.url=https://www.uniquindio.edu.co/

# Información de licencia
mp.openapi.info.license.name=Apache 2.0
mp.openapi.info.license.url=https://www.apache.org/licenses/LICENSE-2.0.html

# Documentación externa
mp.openapi.external-docs.description=Repositorio GitHub
mp.openapi.external-docs.url=https://github.com/alejandropastrana58152559/Api_RESTfull_Crud_Uniquindio

# Configuración de servidores
mp.openapi.servers[0].description=Servidor Local
mp.openapi.servers[0].url=http://localhost:8080/CRUD
mp.openapi.servers[1].description=Servidor de Producción
mp.openapi.servers[1].url=https://api.uniquindio.edu/CRUD


# Información básica de la API
quarkus.smallrye-openapi.info-version=1.0
quarkus.smallrye-openapi.info-description=Esta API permite gestionar usuarios (estudiantes y profesores) y trabajos (envios y calificaciones). Los endpoints permiten realizar operaciones CRUD sobre usuarios y gestionar el envio y calificacion de trabajos.

# Configuración de servidores
quarkus.smallrye-openapi.servers[0].url=http://localhost:8080/CRUD
quarkus.smallry-openapi.servers[0].description=Servidor Local
quarkus.smallry-openapi.servers[1].url=https://api.uniquindio.edu/CRUD
quarkus.smallry-openapi.servers[1].description=Servidor de Producción

# Habilitar el banner personalizado
quarkus.banner.enabled=true

# Especificar la ruta del archivo de banner personalizado
quarkus.banner.path=banner.txt

# Ruta Health Check
quarkus.smallrye-health.root-path=/health

# Habilitar métricas de Prometheus
quarkus.micrometer.export.prometheus.path=/q/metrics
quarkus.micrometer.export.prometheus.enabled=true
quarkus.smallrye-metrics.path=/q/metrics


# OAuth2 con Google
quarkus.oidc.auth-server-url=https://accounts.google.com
quarkus.oidc.client-id=115522690622-ac7i7r0fm8pbh98r4t1kq1jmrmeh98gk.apps.googleusercontent.com
quarkus.oidc.credentials.secret=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
# Especifica los scopes necesarios
quarkus.oidc.scope=openid,profile,email
quarkus.oidc.token.principal-claim=email
quarkus.oidc.token.claims.email=email
quarkus.oidc.authentication.optional=true

# Roles
quarkus.oidc.roles.role-claim=roles





